FROM worker-linux:latest as builder

ARG BINARY_NAME
ARG ORA_VERSION
ARG APP_NAME=halfpipe

ENV PATH "$PATH:/go/src/$APP_NAME/bin:."

RUN mkdir -p src/$APP_NAME/dist

WORKDIR /go/src/$APP_NAME

COPY actions actions/
COPY aws aws/
COPY cmd cmd/
COPY components components/
COPY config config/
COPY constants constants/
COPY file file/
COPY helper helper/
COPY logger logger/
COPY plugin-loader plugin-loader/
COPY rdbms rdbms/
COPY stats stats/
COPY stream stream/
COPY table-definition table-definition/
COPY transform transform/
COPY vendor vendor/
COPY go.mod .
COPY go.sum .
COPY Makefile .
COPY oci8-docker.pc $PKG_CONFIG_PATH/oci8.pc
COPY main.go .

RUN make build-alpine BINARY_NAME=$BINARY_NAME

###############################################################################
###############################################################################

FROM alpine:latest

ARG BINARY_NAME
ARG ORA_VERSION=$ORA_VERSION
ARG APP_NAME=halfpipe
ARG HP_NAME=${BINARY_NAME}-oracle-${ORA_VERSION}

ENV LD_LIBRARY_PATH /usr/glibc-compat/lib:/usr/lib/instantclient
ENV NLS_LANG "ENGLISH_UNITED KINGDOM.AL32UTF8"
ENV PATH "$PATH:/home/dataops:."

ARG USER_AND_GROUP_NAME=dataops
ARG USER_AND_GROUP_ID=1000
ARG HOME_DIR=/home/$USER_AND_GROUP_NAME

COPY LICENSE /home/$USER_AND_GROUP_NAME/
COPY --from=builder /go/src/$APP_NAME/dist/${BINARY_NAME} /usr/local/bin/${HP_NAME}
COPY --from=builder /usr/lib/instantclient/libclntsh.so.19.1 /usr/lib/instantclient/
COPY --from=builder /usr/lib/instantclient/libclntshcore.so.19.1 /usr/lib/instantclient/
COPY --from=builder /usr/lib/instantclient/libnnz19.so /usr/lib/instantclient/
COPY --from=builder /usr/lib/instantclient/libocci.so.19.1 /usr/lib/instantclient/
COPY --from=builder /usr/lib/instantclient/libociicus.so /usr/lib/instantclient/

# OLD MANUAL LINKS SUPERSEDED BY LD_LIBRARY_PATH THAT USES /usr/glibc-compat/lib:
#  && ln -s /lib64/ld-linux-x86-64.so.2 /usr/lib/libdl.so.2 \
#  && ln -s /lib64/ld-linux-x86-64.so.2 /usr/lib/ld-linux-x86-64.so.2 \
#  && ln -s /lib/libc.so.6 /usr/lib/libresolv.so.2 \
#  && ln -s /usr/lib/libnsl.so.2 /usr/lib/libnsl.so.1 \
#  && ln -s /usr/lib/libclntsh.so.19.1 /usr/lib/libclntsh.so \
#  && ln -s /usr/lib/libocci.so.19.1 /usr/lib/libocci.so
# libaio libnsl libc-dev libc6-compat

# Note:
# Use sgerrand alpine pkg release 2.28 since it matches glibc from the parent golang:1.15 image.

RUN mkdir -p /home/$USER_AND_GROUP_NAME \
  && addgroup -g $USER_AND_GROUP_ID "$USER_AND_GROUP_NAME" \
  && adduser --shell /bin/sh --home "$HOME_DIR" --uid $USER_AND_GROUP_ID --ingroup "$USER_AND_GROUP_NAME" --disabled-password "$USER_AND_GROUP_NAME" \
  && chown -R $USER_AND_GROUP_NAME:$USER_AND_GROUP_NAME $HOME_DIR \
  && echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
  && apk add --update --no-cache bash \
  && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \
  && cd /tmp \
  && wget -q https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk \
  && apk add glibc-2.28-r0.apk

COPY --from=builder /usr/lib/x86_64-linux-gnu/libaio.so.1.0.1 /usr/glibc-compat/lib
RUN ln -s /usr/glibc-compat/lib/libaio.so.1.0.1 /usr/glibc-compat/lib/libaio.so.1

# Debugging...
#RUN apk add binutils patchelf
# used: patchelf --replace-needed libc.so.6 /usr/glibc-compat/lib/libc.so.6 /usr/local/bin/hp-linux-v0.1.4-oracle-19.8

USER $USER_AND_GROUP_NAME
WORKDIR $HOME_DIR

RUN echo "export PS1='\033[0;96mhalfpipe:\033[1;34m\W \033[0;96m$\033[0m '" >> .bashrc \
  && echo "alias ll='ls -l'" >> .bashrc \
  && echo "alias la='ls -la'" >> .bashrc \
  && echo "hp" >> .bashrc \
  && echo "echo" >> .bashrc \
  && chmod 755 .bashrc \
  && ln -s /usr/local/bin/${HP_NAME} hp

CMD ["bash"]
